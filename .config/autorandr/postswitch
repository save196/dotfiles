#!/bin/bash

# If autorandr detects new displays connected it falls back to the 'default' profile
if [ "$AUTORANDR_CURRENT_PROFILE" = "default" ]; then
    # Get the list of displays in the default profile
    default=$(cut -d" " -f1 ~/.config/autorandr/default/setup)
    # Convert the list in a greppable list
    default_grep=$(echo "$default" | tr '\n' '|' | sed -E -e 's/\|/$|/g' -e 's/(\||^)/\1^/g' -e 's/\|\^$//g')
    # Get the list of the new connected displays (if any)
    new_displays=$(autorandr --fingerprint | cut -d" " -f1 | grep -Evw "$default_grep|autorandr" | sort)
    if [ -n "$new_displays" ]; then
        # Run autorandr again to check if it recognize the current config as a known configuration
        new_config=$(autorandr --detected | tail +2)
        if [ -n "$new_config" ]; then
            autorandr --change --default default
            exit 0
        fi
        # Get the first display from the default and new displays lists
        first_new_display=$(head -n1 <<< "$new_displays")
        first_default=$(head -n1 <<< "$default")
        # Set the output of the first new display at the right of first_default display
        xrandr --output "$first_new_display" --auto --right-of "$first_default"
        # Set all the other new displays to mirror first_new_display
        for monitor in $(echo "$new_displays" | grep -vw "^$first_new_display$"); do
            xrandr --output "$monitor" --auto --same-as "$first_new_display"
        done
    fi
fi
# Set the background and display a notification with the current display rule
~/.fehbg
notify-send -i display "Display profile" "$AUTORANDR_CURRENT_PROFILE"
